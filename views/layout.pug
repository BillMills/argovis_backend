doctype html
html(lang='en')
    head
        title= title
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1')
        link(rel='stylesheet', href='/stylesheets/leaflet.css')
        link(rel='stylesheet', href='/stylesheets/style.css')
        link(rel='stylesheet', href='/stylesheets/leaflet-draw.css')
        script(src='/javascripts/jquery.min.js')
        script(src="/javascripts/leaflet.js")
        script(src="/javascripts/leaflet.draw.js")
        link(rel='stylesheet', href='/stylesheets/bootstrap.min.css')
        script(src='/javascripts/bootstrap.min.js')
        link(rel='stylesheet', href='/stylesheets/ion.rangeSlider.css')
        script(type="text/javascript", href='/javascripts/ion.rangeSlider.js')

        //used for jquery date range
        script(type="text/javascript", src="javascripts/moment.min.js")
        script(type="text/javascript", src="javascripts/daterangepicker.js")
        link(rel="stylesheet" type="text/css", href="stylesheets/daterangepicker.css")
        
        script(type="text/javascript", src="javascripts/nouislider.js")
        link(rel="stylesheet" type="text/css", href="stylesheets/nouislider.css")

        //used for map projections
        script(type="text/javascript", src="javascripts/proj4.js")
        script(type="text/javascript", src="javascripts/proj4leaflet.js")
        script(src='/javascripts/leaflet.ajax.min.js')
    body
      script(type='text/javascript').
        $(function() {
          var start = moment().subtract(15, 'days');
          var end = moment();

          $('input[name="daterange"]').daterangepicker({
            startDate: start,
            endDate: end,
            locale: {
                format: 'MM/DD/YYYY'
            },
            //dateLimit: {
            //   days: 60
            //},
            alwaysShowCalendars: false,
            minDate: "01/01/1997",
            ranges: {
              'Today': [moment(), moment()],
              'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
              'Last 7 Days': [moment().subtract(6, 'days'), moment()],
              'Last 30 Days': [moment().subtract(29, 'days'), moment()],
              'This Month': [moment().startOf('month'), moment().endOf('month')],
              'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
          });
        });

        $( document ).ready(function() {
          let slider = document.getElementById('slider');
          let minPres = document.getElementById('minPres');
          let maxPres = document.getElementById('maxPres');

          function bindValues(){
            slider.noUiSlider.on('update', function( values, handle ) {
              var value = values[handle];
              if ( handle ) {
                maxPres.value = value;
              } else {
                minPres.value = value;
              }
            });
            minPres.addEventListener('change', function(){
              slider.noUiSlider.set([this.value, null]);
            });
            maxPres.addEventListener('change', function(){
              slider.noUiSlider.set([null, this.value]);
            });
          }

          noUiSlider.create(slider, {
            start: [0, 2000],
            range: { min: 0, max: 6000 },
            step: 1,
            connect: true,
            orientation: 'vertical'
          });

          bindValues(slider)
        });

        var getDateRange = function() {
          // Extract dates from daterange picker
          let dates = {}
          let startDate = $('#daterange').data('daterangepicker').startDate._d;
          let endDate = $('#daterange').data('daterangepicker').endDate._d;
          startDate = moment(startDate).format('YYYY-MM-DD');
          endDate = moment(endDate).format('YYYY-MM-DD');
          dates.startDate = startDate;
          dates.endDate = endDate;
          return(dates)
          };
        
        var getPresRange = function() {
          let maxPres = document.getElementById('maxPres').value;
          let minPres = document.getElementById('minPres').value;
          maxPres = Math.round(maxPres);
          minPres = Math.round(minPres);
          var presRange = [minPres, maxPres];
          return(presRange);
          };



      div(class='container-fluid')
        div(class='row')
          div(class='col-sm-2')
            block sidebar
              ul(class='sidebar-nav')
                li 
                  a(href='/map') Web Mercator Map
                li
                  a(href='/mapNPS') Northern Polar Stereo Map
                li
                  a(href='/mapSPS') Southern Polar Stereo Map
                li
                  a(href='/catalog/dacs') Database summary
                li
                  hr
                li
                  input(type="text", name="daterange", id="daterange")
                li
                  a(href='/selection/lastProfiles') Last profiles reported 
                li
                  div(class='col-sm-2', id='slider-div')
                    div(id='slider')
                  div(class='col-sm-2', id='input-div')
                    label(id='minPresLabel', for='minPres') Low pressure:
                    input(type="number", value="0" min="0" max="6000" id='minPres')
                    label(id='maxPresLabel', for='maxPres') High pressure:
                    input(type="number" value="2000" min="0" max="6000" id='maxPres')
                li
                  button.btn.btn-primary.btn-block(type='submit', id='latestProfileSelection') Reset to Last 1000 profiles
          div(class='col-sm-10')
            block content
