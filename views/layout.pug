doctype html
html(lang='en')
    head
        title= title
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1')
        link(rel='stylesheet', href='/stylesheets/leaflet.css')
        link(rel='stylesheet', href='/stylesheets/style.css')
        link(rel='stylesheet', href='/stylesheets/leaflet-draw.css')
        script(src='/javascripts/jquery.min.js')
        script(src="/javascripts/leaflet.js")
        script(src="/javascripts/leaflet.draw.js")
        link(rel='stylesheet', href='/stylesheets/bootstrap.min.css')
        script(src='/javascripts/bootstrap.min.js')
        link(rel='stylesheet', href='/stylesheets/ion.rangeSlider.css')
        script(type="text/javascript", href='/javascripts/ion.rangeSlider.js')

        //used for jquery date range
        script(type="text/javascript", src="javascripts/moment.min.js")
        script(type="text/javascript", src="javascripts/daterangepicker.js")
        link(rel="stylesheet" type="text/css", href="stylesheets/daterangepicker.css")
        
        script(type="text/javascript", src="javascripts/nouislider.js")
        link(rel="stylesheet" type="text/css", href="stylesheets/nouislider.css")
    body
      script(type='text/javascript').
        $(function() {
          var start = moment().subtract(15, 'days');
          var end = moment();

          $('input[name="daterange"]').daterangepicker({
            startDate: start,
            endDate: end,
            locale: {
                format: 'MM/DD/YYYY'
            },
            dateLimit: {
                days: 60
            },
            alwaysShowCalendars: false,
            minDate: "01/01/1997",
            ranges: {
              'Today': [moment(), moment()],
              'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
              'Last 7 Days': [moment().subtract(6, 'days'), moment()],
              'Last 30 Days': [moment().subtract(29, 'days'), moment()],
              'This Month': [moment().startOf('month'), moment().endOf('month')],
              'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            },
          });
        });

        $( document ).ready(function() {
          var slider = document.getElementById('slider');
          var minPres = document.getElementById('minPres');
          var maxPres = document.getElementById('maxPres');

          function bindValues(){
            slider.noUiSlider.on('update', function( values, handle ) {
              var value = values[handle];
              if ( handle ) {
                maxPres.value = value;
              } else {
                minPres.value = value;
              }
            });
            minPres.addEventListener('change', function(){
              slider.noUiSlider.set([this.value, null]);
            });
            maxPres.addEventListener('change', function(){
              slider.noUiSlider.set([null, this.value]);
            });
          }

          noUiSlider.create(slider, {
            start: [0, 2000],
            range: { min: 0, max: 2000 },
            step: 1,
            connect: true
          });

          bindValues(slider)
        });



      div(class='container-fluid')
        div(class='row')
          div(class='col-sm-2')
            block sidebar
              ul(class='sidebar-nav')
                li 
                  a(href='/map') Map
                li
                  a(href='/catalog/platforms') Platforms
                li 
                  a(href='/catalog/profiles') Profiles
                li
                  a(href='/catalog/dacs') Dacs
                li
                  hr
                li
                  input(type="text", name="daterange", id="daterange")
                li
                  div(id='slider')
                  input(type="number" value="0" min="0" max="2000" id='minPres')
                  input(type="number" value="2000" min="0" max="2000" id='maxPres')
                a(href='/selection/lastProfiles') Last profiles reported  
                li
                  button.btn.btn-primary(type='submit', id='shapeSelection') Get floats within shape
                li
                  button.btn.btn-primary(type='submit', id='lastProfileSelection') Get last profiles of all floats
          div(class='col-sm-10')
            block content
